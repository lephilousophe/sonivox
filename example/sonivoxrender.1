.\" Automatically generated by Pandoc 3.1.11.1
.\"
.TH "SONIVOXRENDER" "1" "October 25, 2024" "sonivox 3.6.15.0" "Sonivox MIDI File Renderer"
.SH NAME
\f[B]sonivoxrender\f[R] \[em] Render standard MIDI files into raw PCM
audio
.SH SYNOPSIS
.PP
\f[B]sonivoxrender\f[R] [\f[B]\-h\f[R]] [\f[B]\-d\f[R]
\f[I]file.dls\f[R]] [\f[B]\-r\f[R] \f[I]0..4\f[R]] [\f[B]\-w\f[R]
\f[I]0..32767\f[R]] [\f[B]\-n\f[R] \f[I]0..32767\f[R]] [\f[B]\-c\f[R]
\f[I]0..4\f[R]] [\f[B]\-l\f[R] \f[I]0..32767\f[R]] [\f[B]\-v\f[R]
\f[I]0..100\f[R]] \f[I]midi_file\f[R]
.SH DESCRIPTION
This program is a MIDI file renderer based on the sonivox synthesizer
library.
It reads .MID (Standard MIDI Files) file format, and writes an audio
stream to the standard output as raw 16 bit stereo PCM samples.
.SS Options
.TP
\-h
Prints brief usage information.
.TP
\-d \f[I]file.dls\f[R]
Optional DLS soundfont file name.
If not provided, it uses an internal embedded soundfont.
.TP
\-r \f[I]reverb_preset\f[R]
Reverb preset between 0 and 4: 0=no, 1=large hall, 2=hall, 3=chamber,
4=room.
.TP
\-w \f[I]reverb_wet\f[R]
Reverb wet level between 0 and 32767.
.TP
\-n \f[I]reverb_dry\f[R]
Reverb dry level between 0 and 32767.
.TP
\-c \f[I]chorus_preset\f[R]
Chorus preset between 0 and 4: 0=no, 1..4=presets.
.TP
\-l \f[I]chorus_level\f[R]
Chorus level between 0 and 32767.
.TP
\-v \f[I]master_volume\f[R]
Master volume between 0 and 100, default to 90.
.SS Arguments
.TP
\f[I]midi_file\f[R]
Input MID file name.
.SH EXAMPLES
The following examples assume the default option USE_44KHZ=ON, which
means an output sample rate = 44100 Hz.
.PP
Example 1: Render a MIDI file and save the rendered audio as a raw audio
file:
.IP
.EX
$ sonivoxrender ants.mid > ants.pcm
.EE
.PP
Example 2: pipe the rendered audio thru the Linux ALSA \f[B]aplay\f[R]
utility:
.IP
.EX
$ sonivoxrender ants.mid | aplay \-c 2 \-f S16_LE \-r 44100
.EE
.PP
is equivalent to:
.IP
.EX
$ sonivoxrender ants.mid | aplay \-f cd
.EE
.PP
Example 3: pipe the rendered audio thru the \f[B]lame\f[R] utility
creating a MP3 file:
.IP
.EX
$ sonivoxrender ants.mid | lame \-r \-s 44100 \- ants.mp3
.EE
.PP
Example 4: pipe the rendered audio thru the \f[B]sox\f[R] utility
creating a WAV file:
.IP
.EX
$ sonivoxrender ants.mid | sox \-t s16 \-c 2 \-r 44100 \- ants.wav
.EE
.PP
Example 5: pipe the rendered audio thru the PulseAudio\[cq]s
\f[B]pacat\f[R] utility:
.IP
.EX
$ sonivoxrender ants.mid | pacat
.EE
.SH BUGS
See Tickets at GitHub \c
.UR https://github.com/pedrolcl/sonivox/issues/
.UE \c
.SH LICENSE AND COPYRIGHT
Licensed under the Apache License, Version 2.0
.PP
Copyright (c) 2022\-2024 Pedro López\-Cabanillas and contributors
.SH AUTHORS
Pedro López\-Cabanillas \c
.MT plcl@users.sf.net
.ME \c.
